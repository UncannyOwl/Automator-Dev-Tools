name: Merge PR to Staging

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'PR number to merge to staging'
        required: false
        type: string
      branch_name:
        description: 'Branch name to merge to staging'
        required: false
        type: string
      target_branch:
        description: 'Target branch to merge into (default: staging)'
        required: false
        type: string
        default: 'staging'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to merge to staging'
        required: false
        type: string
      branch_name:
        description: 'Branch name to merge to staging'
        required: false
        type: string
      target_branch:
        description: 'Target branch to merge into (default: staging)'
        required: false
        type: string
        default: 'staging'

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-to-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Run Merge Script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_PR: ${{ inputs.pr_number || github.event.inputs.pr_number }}
          INPUT_BRANCH: ${{ inputs.branch_name || github.event.inputs.branch_name }}
          TARGET_BRANCH: ${{ inputs.target_branch || github.event.inputs.target_branch || 'staging' }}
        run: |
          cat <<'EOF' > merge-script.sh
          #!/bin/bash

          set -e

          merge_to_target() {
            local source=$1
            local is_pr=$2

            echo "Checking out target branch: $TARGET_BRANCH"
            git fetch origin "$TARGET_BRANCH"
            git checkout "$TARGET_BRANCH"
            git pull origin "$TARGET_BRANCH"

            echo "Merging $source into $TARGET_BRANCH"
            if git merge "$source" --no-ff -m "Merge $source into $TARGET_BRANCH"; then
              git push origin "$TARGET_BRANCH"
              echo "✅ Successfully merged $source into $TARGET_BRANCH"
              
              if [[ "$is_pr" == "true" ]]; then
                gh pr comment "$INPUT_PR" --body "✅ Successfully merged to $TARGET_BRANCH branch"
                gh pr close "$INPUT_PR" --comment "PR has been merged to $TARGET_BRANCH"
              fi
              return 0
            else
              echo "❌ Merge conflict detected"
              git merge --abort
              
              if [[ "$is_pr" == "true" ]]; then
                gh pr comment "$INPUT_PR" --body "❌ Merge conflict detected. Please resolve conflicts and try again."
              fi
              return 1
            fi
          }

          if [[ -n "$INPUT_PR" ]]; then
            echo "Fetching PR #$INPUT_PR info..."
            pr_info=$(gh pr view "$INPUT_PR" --json headRefName)
            source_branch=$(echo "$pr_info" | jq -r .headRefName)
            
            echo "Fetching source branch: $source_branch"
            git fetch origin "$source_branch"
            merge_to_target "$source_branch" "true"

          elif [[ -n "$INPUT_BRANCH" ]]; then
            echo "Fetching source branch: $INPUT_BRANCH"
            git fetch origin "$INPUT_BRANCH"
            merge_to_target "$INPUT_BRANCH" "false"

          else
            echo "Error: Either PR number or branch name must be provided"
            exit 1
          fi
          EOF

          chmod +x merge-script.sh
          ./merge-script.sh 