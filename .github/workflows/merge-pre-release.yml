name: Merge pre-release into open PRs

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to merge pre-release into (optional)'
        required: false
        type: string
      branch_name:
        description: 'Branch name to merge pre-release into (optional)'
        required: false
        type: string
  schedule:
    - cron: '12 */12 * * *' # every 12 hours

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Run Merge Script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_PR: ${{ github.event.inputs.pr_number }}
          INPUT_BRANCH: ${{ github.event.inputs.branch_name }}
        run: |
          cat <<'EOF' > merge-script.sh
          #!/bin/bash

          set -e

          merge_into_branch() {
            local branch=$1
            echo "Checking out branch: $branch"
            git fetch origin "$branch"
            git checkout "$branch"
            echo "Merging origin/pre-release into $branch"
            if git merge origin/pre-release --no-commit --no-ff; then
              git commit -m "Auto-merged pre-release into $branch"
              git push origin "$branch"
              echo "✅ Successfully merged pre-release into $branch"
            else
              echo "❌ Merge conflict detected in $branch"
              git merge --abort
              return 1
            fi
          }

          if [[ -n "$INPUT_PR" ]]; then
            echo "Fetching PR #$INPUT_PR info..."
            pr_info=$(gh pr view "$INPUT_PR" --json headRefName)
            head_ref=$(echo "$pr_info" | jq -r .headRefName)
            merge_into_branch "$head_ref" || gh pr comment "$INPUT_PR" --body "⚠️ Merge conflict: Please resolve conflicts with pre-release manually."

          elif [[ -n "$INPUT_BRANCH" ]]; then
            merge_into_branch "$INPUT_BRANCH"

          else
            echo "Fetching open PRs..."
            prs=$(gh pr list --state open --json number,headRefName --jq '.[] | [.number, .headRefName] | @tsv')
            while IFS=$'\t' read -r pr_number head_ref; do
              echo "\nProcessing PR #$pr_number ($head_ref)..."
              if merge_into_branch "$head_ref"; then
                echo "✅ Merged into #$pr_number"
              else
                echo "❌ Conflict in #$pr_number"
                gh pr comment "$pr_number" --body "⚠️ Merge conflict: Please resolve conflicts with pre-release manually."
              fi
            done <<< "$prs"
          fi
          EOF

          chmod +x merge-script.sh
          ./merge-script.sh
