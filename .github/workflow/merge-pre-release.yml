name: Merge pre-release into open PRs

on:
  workflow_dispatch: # manual trigger
  schedule:
    - cron: '12 * * * *' # hourly; adjust as needed

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50 # Reduced from 0 for better performance while still maintaining enough history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install GitHub CLI
        uses: cli/cli-action@v2

      - name: Merge pre-release into all open PRs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching open PRs..."
          prs=$(gh pr list --state open --json number,headRefName,url --jq '.[] | [.number, .headRefName, .url] | @tsv')

          if [ -z "$prs" ]; then
            echo "No open PRs found."
            exit 0
          fi

          while IFS=$'\t' read -r pr_number head_ref pr_url; do
            echo "Processing PR #$pr_number (branch: $head_ref)..."
            
            # Fetch the branch with retry logic
            max_retries=3
            retry_count=1
            while [ $retry_count -le $max_retries ]; do
              if git fetch origin $head_ref; then
                break
              fi
              echo "Failed to fetch branch (attempt $retry_count/$max_retries)"
              retry_count=$((retry_count + 1))
              sleep 5
            done

            if [ $retry_count -gt $max_retries ]; then
              echo "❌ Failed to fetch PR #$pr_number after $max_retries attempts"
              gh pr comment $pr_number --body "⚠️ Automated merge failed: Unable to fetch branch after multiple attempts. Please try again later."
              continue
            fi

            git checkout $head_ref

            echo "Merging pre-release into $head_ref..."
            if git merge origin/pre-release --no-commit --no-ff; then
              git commit -m "Auto-merged pre-release into $head_ref"
              if git push origin $head_ref; then
                echo "✅ Merged successfully into PR #$pr_number"
              else
                echo "❌ Failed to push changes to PR #$pr_number"
                gh pr comment $pr_number --body "⚠️ Automated merge failed: Unable to push changes. Please try again later."
              fi
            else
              echo "❌ Conflict in PR #$pr_number ($head_ref), skipping..."
              git merge --abort
              gh pr comment $pr_number --body "⚠️ Automated merge failed: Merge conflicts detected. Please resolve conflicts manually."
            fi
          done <<< "$prs"
